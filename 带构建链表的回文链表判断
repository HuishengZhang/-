
import java.util.Scanner;

public class Main {
    public static boolean isPalin(ListNode head){
        if(head == null || head.next == null){
            return true;
        }
        ListNode slow = head;
        ListNode fast = head;
        //找到中间节点
        while (fast.next != null && fast.next.next != null){
            fast = fast.next.next;
            slow = slow.next;
        }
        ListNode mid = slow.next;
        ListNode reverseRoot = new ListNode(0);
        ListNode cur = reverseRoot;
        while (mid != null){
            cur = mid;
            mid = mid.next;
            cur.next = null;
            cur.next = reverseRoot.next;
            reverseRoot.next = cur;
        }
        slow = head;
        fast = reverseRoot.next;
        while (fast != null){
            if(fast.val != slow.val){
                return false;
            }
            slow = slow.next;
            fast = fast.next;
        }
        return true;
    }

    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        ListNode list = new ListNode(-1);
        ListNode node = list;

        String[] str = sc.nextLine().split(" ");
        int[] nums = new int[str.length];

        for (int i = 0; i < str.length; i++){
            nums[i] = Integer.parseInt(str[i]);
        }

        for (int i = 0; i < str.length; i++){
            ListNode temp = new ListNode(nums[i]);
            node.next = temp;
            node = node.next;
        }
        if(isPalin(list.next)){
            System.out.println("True");
        }else {
            System.out.println("False");
        }
    }
}

 class ListNode {
    int val;
    ListNode next = null;
    ListNode(int val) {
        this.val = val;
    }
    ListNode(int val, ListNode next){
        this.val = val;
        this.next = next;
    }
}
